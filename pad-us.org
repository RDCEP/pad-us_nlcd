
#+PROPERTY: session *R*

#+NAME: init
#+BEGIN_SRC R :results silent
  library( ascii)
  library( rgdal)
#+END_SRC

* COMMENT differentiate four regions
  1. cUSA
  2. Alaska
  3. Pacific islands
  4. PR & USVI

#+NAME: rgdal
#+BEGIN_SRC R :cache yes :results output verbatim
  padus <- readOGR( "PADUS1_2_Shapfile", "PADUS1_2_SHP")
  save( padus, file= "padus.RData")
#+END_SRC


     
#+NAME: StateNmOgr
#+BEGIN_SRC sh :results output vector :cache yes
  ogrinfo -sql "SELECT DISTINCT StateNm FROM PADUS1_2_SHP" PADUS1_2_Shapfile 
#+END_SRC

#+results[61b91179cbcfe1cc182f8a3832730ff3419b2e82]: StateNmOgr
#+begin_example
INFO: Open of `PADUS1_2_Shapfile'
      using driver `ESRI Shapefile' successful.

Layer name: PADUS1_2_SHP
Geometry: Polygon
Feature Count: 60
Layer SRS WKT:
(unknown)
StateNm: String (50.0)
OGRFeature(PADUS1_2_SHP):0
  StateNm (String) = Hawaii

OGRFeature(PADUS1_2_SHP):1
  StateNm (String) = American Samoa

OGRFeature(PADUS1_2_SHP):2
  StateNm (String) = U.S. Minor Outlying Islands

OGRFeature(PADUS1_2_SHP):3
  StateNm (String) = Marshall Islands

OGRFeature(PADUS1_2_SHP):4
  StateNm (String) = California

OGRFeature(PADUS1_2_SHP):5
  StateNm (String) = Arizona

OGRFeature(PADUS1_2_SHP):6
  StateNm (String) = Nevada

OGRFeature(PADUS1_2_SHP):7
  StateNm (String) = Colorado

OGRFeature(PADUS1_2_SHP):8
  StateNm (String) = New Mexico

OGRFeature(PADUS1_2_SHP):9
  StateNm (String) = Utah

OGRFeature(PADUS1_2_SHP):10
  StateNm (String) = Kansas

OGRFeature(PADUS1_2_SHP):11
  StateNm (String) = Oklahoma

OGRFeature(PADUS1_2_SHP):12
  StateNm (String) = Texas

OGRFeature(PADUS1_2_SHP):13
  StateNm (String) = Puerto Rico

OGRFeature(PADUS1_2_SHP):14
  StateNm (String) = Louisiana

OGRFeature(PADUS1_2_SHP):15
  StateNm (String) = Illinois

OGRFeature(PADUS1_2_SHP):16
  StateNm (String) = Indiana

OGRFeature(PADUS1_2_SHP):17
  StateNm (String) = Mississippi

OGRFeature(PADUS1_2_SHP):18
  StateNm (String) = Kentucky

OGRFeature(PADUS1_2_SHP):19
  StateNm (String) = Tennessee

OGRFeature(PADUS1_2_SHP):20
  StateNm (String) = West Virginia

OGRFeature(PADUS1_2_SHP):21
  StateNm (String) = North Carolina

OGRFeature(PADUS1_2_SHP):22
  StateNm (String) = Virginia

OGRFeature(PADUS1_2_SHP):23
  StateNm (String) = South Carolina

OGRFeature(PADUS1_2_SHP):24
  StateNm (String) = Florida

OGRFeature(PADUS1_2_SHP):25
  StateNm (String) = Missouri

OGRFeature(PADUS1_2_SHP):26
  StateNm (String) = Arkansas

OGRFeature(PADUS1_2_SHP):27
  StateNm (String) = Georgia

OGRFeature(PADUS1_2_SHP):28
  StateNm (String) = Alabama

OGRFeature(PADUS1_2_SHP):29
  StateNm (String) = United States Virgin Islands

OGRFeature(PADUS1_2_SHP):30
  StateNm (String) = Oregon

OGRFeature(PADUS1_2_SHP):31
  StateNm (String) = Idaho

OGRFeature(PADUS1_2_SHP):32
  StateNm (String) = Montana

OGRFeature(PADUS1_2_SHP):33
  StateNm (String) = Wyoming

OGRFeature(PADUS1_2_SHP):34
  StateNm (String) = South Dakota

OGRFeature(PADUS1_2_SHP):35
  StateNm (String) = North Dakota

OGRFeature(PADUS1_2_SHP):36
  StateNm (String) = Nebraska

OGRFeature(PADUS1_2_SHP):37
  StateNm (String) = Washington

OGRFeature(PADUS1_2_SHP):38
  StateNm (String) = Iowa

OGRFeature(PADUS1_2_SHP):39
  StateNm (String) = Ohio

OGRFeature(PADUS1_2_SHP):40
  StateNm (String) = Wisconsin

OGRFeature(PADUS1_2_SHP):41
  StateNm (String) = Michigan

OGRFeature(PADUS1_2_SHP):42
  StateNm (String) = New Jersey

OGRFeature(PADUS1_2_SHP):43
  StateNm (String) = District of Columbia

OGRFeature(PADUS1_2_SHP):44
  StateNm (String) = Delaware

OGRFeature(PADUS1_2_SHP):45
  StateNm (String) = Maryland

OGRFeature(PADUS1_2_SHP):46
  StateNm (String) = Pennsylvania

OGRFeature(PADUS1_2_SHP):47
  StateNm (String) = Minnesota

OGRFeature(PADUS1_2_SHP):48
  StateNm (String) = New York

OGRFeature(PADUS1_2_SHP):49
  StateNm (String) = Vermont

OGRFeature(PADUS1_2_SHP):50
  StateNm (String) = New Hampshire

OGRFeature(PADUS1_2_SHP):51
  StateNm (String) = Maine

OGRFeature(PADUS1_2_SHP):52
  StateNm (String) = Rhode Island

OGRFeature(PADUS1_2_SHP):53
  StateNm (String) = Massachusetts

OGRFeature(PADUS1_2_SHP):54
  StateNm (String) = Connecticut

OGRFeature(PADUS1_2_SHP):55
  StateNm (String) = Guam

OGRFeature(PADUS1_2_SHP):56
  StateNm (String) = Alaska

OGRFeature(PADUS1_2_SHP):57
  StateNm (String) = Northern Mariana Islands

OGRFeature(PADUS1_2_SHP):58
  StateNm (String) = Federated States of Micronesia

OGRFeature(PADUS1_2_SHP):59
  StateNm (String) = Palau

#+end_example

#+NAME: regions
#+BEGIN_SRC R :session *R* :results output code 
  if( !exists( "padus")) load( "padus.RData")
  
  states <- unique( padus@data[ , c( "State_Nm", "StateNm")])
  states <- states[ order( states$State_Nm),]
  states <- within( states, {
    region <- factor( rep( "cUSA", nrow(states)),
                     levels= c( "cUSA", "Alaska", "Caribbean", "Pacific"))
    region[ states$StateNm == 'Alaska' ] <- "Alaska"
    region[ states$StateNm == 'Hawaii' ] <- "Pacific"
    region[ as.character( states$State_Nm) >= '60' ] <- "Pacific"
    region[ states$State_Nm %in% c( '72', '78') ] <- "Caribbean"
  })
  
  sqlWhere <- with( states,
                   by( State_Nm, region,
                      function( fips) paste( sprintf( "'%s'", fips),
                                            collapse=",")))
  
  cat( sapply( names( sqlWhere),
                 function( region) {
                   paste( "ogr2ogr -overwrite PADUS1_2_regions PADUS1_2_Shapfile",
                         sprintf( "-nln PADUS1_2_%s -where \"State_Nm IN (%s)\" PADUS1_2_SHP",
                                 region, sqlWhere[[ region]]))
                 }),
        sep= "\n")
#+END_SRC

#+results: regions
#+BEGIN_SRC R
   ogr2ogr -overwrite PADUS1_2_regions PADUS1_2_Shapfile -nln PADUS1_2_cUSA -where "State_Nm IN ('01','04','05','06','08','09','10','11','12','13','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','44','45','46','47','48','49','50','51','53','54','55','56')" PADUS1_2_SHP
  ogr2ogr -overwrite PADUS1_2_regions PADUS1_2_Shapfile -nln PADUS1_2_Alaska -where "State_Nm IN ('02')" PADUS1_2_SHP
  ogr2ogr -overwrite PADUS1_2_regions PADUS1_2_Shapfile -nln PADUS1_2_Caribbean -where "State_Nm IN ('72','78')" PADUS1_2_SHP
  ogr2ogr -overwrite PADUS1_2_regions PADUS1_2_Shapfile -nln PADUS1_2_Pacific -where "State_Nm IN ('15','60','64','66','68','69','70','74')" PADUS1_2_SHP
#+END_SRC

#+NAME: ogr2ogr
#+BEGIN_SRC sh :session :results output
  mkdir PADUS1_2_regions
  ogr2ogr -overwrite PADUS1_2_regions PADUS1_2_Shapfile -nln PADUS1_2_cUSA -where "State_Nm IN ('01','04','05','06','08','09','10','11','12','13','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','44','45','46','47','48','49','50','51','53','54','55','56')" PADUS1_2_SHP &
  ogr2ogr -overwrite PADUS1_2_regions PADUS1_2_Shapfile -nln PADUS1_2_Alaska -where "State_Nm IN ('02')" PADUS1_2_SHP &
  ogr2ogr -overwrite PADUS1_2_regions PADUS1_2_Shapfile -nln PADUS1_2_Caribbean -where "State_Nm IN ('72','78')" PADUS1_2_SHP &
  ogr2ogr -overwrite PADUS1_2_regions PADUS1_2_Shapfile -nln PADUS1_2_Pacific -where "State_Nm IN ('15','60','64','66','68','69','70','74')" PADUS1_2_SHP &
  
#+END_SRC


#+results: ogr2ogr

#+NAME: writeOgr2ogr( region= "cUSA")
#+BEGIN_SRC R :results output
  cat( "ogr2ogr -overwrite PADUS1_2_regions PADUS1_2_Shapfile",
        sprintf( "-nln PADUS1_2_%s -where \"State_Nm IN (%s)\" PADUS1_2_SHP",
                region, sqlWhere[[ region]]))
#+END_SRC

#+CALL: writeOgr2ogr( region="cUSA")

#+results: writeOgr2ogr( region="cUSA")
: [1] "ogr2ogr -overwrite PADUS1_2_regions PADUS1_2_Shapfile -nln PADUS1_2_cUSA -where \"State_Nm IN (01,04,05,06,08,09,10,11,12,13,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,50,51,53,54,55,56)\" PADUS1_2_SHP"


#+NAME: gdal_rasterize
#+BEGIN_SRC sh :session :results output verbatim :cache yes
    for region in cUSA Alaska Pacific Caribbean; do
        gdal_rasterize -ot Byte -tr 30 30 -tap -at -a GAP_Sts \
            -a_nodata 255 -co "COMPRESS=LZW" \
            -l PADUS1_2_${region}  PADUS1_2_regions PADUS1_2_regions/PADUS1_2_${region}_GAP.tif
    done
#+END_SRC

#+results[e755e3ff6dd7ab267d021b9edb030241696c4999]: gdal_rasterize
: 0...10...20...30...40...50...60...70...80...90...100 - done.

* 
